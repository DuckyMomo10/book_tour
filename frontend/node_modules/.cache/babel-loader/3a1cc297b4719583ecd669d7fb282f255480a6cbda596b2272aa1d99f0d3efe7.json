{"ast":null,"code":"var _jsxFileName = \"D:\\\\tour-management\\\\frontend\\\\src\\\\admin\\\\AdminLogin.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport { Container, Row, Col, Form, FormGroup, Button } from \"reactstrap\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport \"../styles/login.css\";\nimport loginImg from \"../assets/images/login.png\";\nimport userIcon from \"../assets/images/user.png\";\nimport { AuthContext } from \"./../context/AuthContext\";\nimport { BASE_URL } from \"./../utils/config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminLogin = () => {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const onSubmit = async data => {\n    setError(null);\n    dispatch({\n      type: \"LOGIN_START\"\n    });\n    try {\n      const res = await fetch(`${BASE_URL}/auth/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\",\n        body: JSON.stringify(data)\n      });\n      if (!res.ok) {\n        const result = await res.json();\n        throw new Error(result.message || \"Failed to login.\");\n      }\n      const result = await res.json();\n      const userRole = result.data.role;\n      dispatch({\n        type: \"LOGIN_SUCCESS\",\n        payload: result.data\n      });\n\n      // Điều hướng dựa trên role\n      if (userRole === \"admin\") {\n        navigate(\"/admin/dashboard\"); // Trang admin\n      } else {\n        navigate(\"/\"); // Trang user\n      }\n    } catch (err) {\n      setError(err.message);\n      dispatch({\n        type: \"LOGIN_FAILURE\",\n        payload: err.message\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminLogin, \"RcUlyA4GEHKh2CRkv6V7TGIZ2pY=\", false, function () {\n  return [useForm];\n});\n_c = AdminLogin;\nexport default AdminLogin;\nvar _c;\n$RefreshReg$(_c, \"AdminLogin\");","map":{"version":3,"names":["React","useContext","useState","Container","Row","Col","Form","FormGroup","Button","Link","useNavigate","useForm","loginImg","userIcon","AuthContext","BASE_URL","AdminLogin","register","handleSubmit","formState","errors","onSubmit","data","setError","dispatch","type","res","fetch","method","headers","credentials","body","JSON","stringify","ok","result","json","Error","message","userRole","role","payload","navigate","err"],"sources":["D:/tour-management/frontend/src/admin/AdminLogin.jsx"],"sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport { Container, Row, Col, Form, FormGroup, Button } from \"reactstrap\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"../styles/login.css\";\r\n\r\nimport loginImg from \"../assets/images/login.png\";\r\nimport userIcon from \"../assets/images/user.png\";\r\nimport { AuthContext } from \"./../context/AuthContext\";\r\nimport { BASE_URL } from \"./../utils/config\";\r\n\r\nconst AdminLogin = () => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const onSubmit = async (data) => {\r\n    setError(null);\r\n    dispatch({ type: \"LOGIN_START\" });\r\n  \r\n    try {\r\n      const res = await fetch(`${BASE_URL}/auth/login`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"include\",\r\n        body: JSON.stringify(data),\r\n      });\r\n  \r\n      if (!res.ok) {\r\n        const result = await res.json();\r\n        throw new Error(result.message || \"Failed to login.\");\r\n      }\r\n  \r\n      const result = await res.json();\r\n      const userRole = result.data.role;\r\n  \r\n      dispatch({ type: \"LOGIN_SUCCESS\", payload: result.data });\r\n  \r\n      // Điều hướng dựa trên role\r\n      if (userRole === \"admin\") {\r\n        navigate(\"/admin/dashboard\"); // Trang admin\r\n      } else {\r\n        navigate(\"/\"); // Trang user\r\n      }\r\n    } catch (err) {\r\n      setError(err.message);\r\n      dispatch({ type: \"LOGIN_FAILURE\", payload: err.message });\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminLogin\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEC,SAAS,EAAEC,MAAM,QAAQ,YAAY;AACzE,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,SAASC,OAAO,QAAQ,iBAAiB;AACzC,OAAO,qBAAqB;AAE5B,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,SAASC,WAAW,QAAQ,0BAA0B;AACtD,SAASC,QAAQ,QAAQ,mBAAmB;AAAC;AAE7C,MAAMC,UAAU,GAAG,MAAM;EAAA;EACvB,MAAM;IACJC,QAAQ;IACRC,YAAY;IACZC,SAAS,EAAE;MAAEC;IAAO;EACtB,CAAC,GAAGT,OAAO,EAAE;EACb,MAAMU,QAAQ,GAAG,MAAOC,IAAI,IAAK;IAC/BC,QAAQ,CAAC,IAAI,CAAC;IACdC,QAAQ,CAAC;MAAEC,IAAI,EAAE;IAAc,CAAC,CAAC;IAEjC,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEZ,QAAS,aAAY,EAAE;QAChDa,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,WAAW,EAAE,SAAS;QACtBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,IAAI;MAC3B,CAAC,CAAC;MAEF,IAAI,CAACI,GAAG,CAACQ,EAAE,EAAE;QACX,MAAMC,MAAM,GAAG,MAAMT,GAAG,CAACU,IAAI,EAAE;QAC/B,MAAM,IAAIC,KAAK,CAACF,MAAM,CAACG,OAAO,IAAI,kBAAkB,CAAC;MACvD;MAEA,MAAMH,MAAM,GAAG,MAAMT,GAAG,CAACU,IAAI,EAAE;MAC/B,MAAMG,QAAQ,GAAGJ,MAAM,CAACb,IAAI,CAACkB,IAAI;MAEjChB,QAAQ,CAAC;QAAEC,IAAI,EAAE,eAAe;QAAEgB,OAAO,EAAEN,MAAM,CAACb;MAAK,CAAC,CAAC;;MAEzD;MACA,IAAIiB,QAAQ,KAAK,OAAO,EAAE;QACxBG,QAAQ,CAAC,kBAAkB,CAAC,CAAC,CAAC;MAChC,CAAC,MAAM;QACLA,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;MACjB;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZpB,QAAQ,CAACoB,GAAG,CAACL,OAAO,CAAC;MACrBd,QAAQ,CAAC;QAAEC,IAAI,EAAE,eAAe;QAAEgB,OAAO,EAAEE,GAAG,CAACL;MAAQ,CAAC,CAAC;IAC3D;EACF,CAAC;EAED,oBACE;IAAA;IAAA;IAAA;EAAA,QAEM;AAEV,CAAC;AAAA,GA7CKtB,UAAU;EAAA,QAKVL,OAAO;AAAA;AAAA,KALPK,UAAU;AA+ChB,eAAeA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}