{"ast":null,"code":"var _jsxFileName = \"D:\\\\tour-management\\\\frontend\\\\src\\\\pages\\\\Register.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport { Container, Row, Col, Form, FormGroup, Button } from \"reactstrap\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport \"../styles/login.css\";\nimport registerImg from \"../assets/images/register.png\";\nimport userIcon from \"../assets/images/user.png\";\nimport { AuthContext } from \"./../context/AuthContext\";\nimport { BASE_URL } from \"./../utils/config\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const {\n    dispatch\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const onSubmit = async data => {\n    console.log(data);\n    try {\n      const res = await fetch(`${BASE_URL}/auth/register`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data) // Sử dụng dữ liệu từ form\n      });\n\n      const result = await res.json();\n      if (!res.ok) {\n        throw new Error(result.message || \"Registration failed.\");\n      }\n      console.log(result);\n      dispatch({\n        type: \"REGISTER_SUCCESS\"\n      });\n      navigate(\"/login\");\n    } catch (err) {\n      console.error(err);\n      dispatch({\n        type: \"REGISTER_FAILURE\",\n        payload: err.message\n      });\n      alert(\"Registration failed. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          lg: \"8\",\n          className: \"m-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"login_container d-flex justify-content-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"login_img\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: registerImg,\n                alt: \"Register\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"login_form\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: userIcon,\n                  alt: \"User Icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Register\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: handleSubmit(onSubmit),\n                children: [\" \", /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    placeholder: \"Username\",\n                    ...register(\"username\", {\n                      required: \"* Username is required\"\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 21\n                  }, this), (errors === null || errors === void 0 ? void 0 : errors.email) && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-danger\",\n                    children: errors.email.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"email\",\n                    placeholder: \"Email\",\n                    ...register(\"email\", {\n                      required: \"* Email is required\",\n                      pattern: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 21\n                  }, this), (errors === null || errors === void 0 ? void 0 : errors.email) && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-danger\",\n                    children: errors.email.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"password\",\n                    placeholder: \"Password\",\n                    ...register(\"password\", {\n                      required: \"* Password is a required field\",\n                      pattern: /^(?=.*[a-z])(?=.*\\d)[a-z\\d]{8,}$/\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 21\n                  }, this), (errors === null || errors === void 0 ? void 0 : errors.password) && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-danger\",\n                    children: errors.password.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"btn secondary__btn auth_btn\",\n                  type: \"submit\",\n                  children: \"Create Account\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/login\",\n                  children: \"Login\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 44\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"Pt68fc5nXlPnLJaMJEXXE6ctULU=\", false, function () {\n  return [useForm, useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useContext","Container","Row","Col","Form","FormGroup","Button","Link","useNavigate","registerImg","userIcon","AuthContext","BASE_URL","useForm","Register","register","handleSubmit","formState","errors","dispatch","navigate","onSubmit","data","console","log","res","fetch","method","headers","body","JSON","stringify","result","json","ok","Error","message","type","err","error","payload","alert","required","email","pattern","password"],"sources":["D:/tour-management/frontend/src/pages/Register.jsx"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { Container, Row, Col, Form, FormGroup, Button } from \"reactstrap\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport \"../styles/login.css\";\r\n\r\nimport registerImg from \"../assets/images/register.png\";\r\nimport userIcon from \"../assets/images/user.png\";\r\nimport { AuthContext } from \"./../context/AuthContext\";\r\nimport { BASE_URL } from \"./../utils/config\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst Register = () => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const { dispatch } = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n\r\n  const onSubmit = async (data) => {\r\n    console.log(data);\r\n    try {\r\n      const res = await fetch(`${BASE_URL}/auth/register`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(data), // Sử dụng dữ liệu từ form\r\n      });\r\n\r\n      const result = await res.json();\r\n      if (!res.ok) {\r\n        throw new Error(result.message || \"Registration failed.\");\r\n      }\r\n      console.log(result);\r\n\r\n      dispatch({ type: \"REGISTER_SUCCESS\" });\r\n      navigate(\"/login\");\r\n    } catch (err) {\r\n      console.error(err);\r\n      dispatch({ type: \"REGISTER_FAILURE\", payload: err.message });\r\n      alert(\"Registration failed. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <Container>\r\n        <Row>\r\n          <Col lg=\"8\" className=\"m-auto\">\r\n            <div className=\"login_container d-flex justify-content-between\">\r\n              <div className=\"login_img\">\r\n                <img src={registerImg} alt=\"Register\" />\r\n              </div>\r\n              <div className=\"login_form\">\r\n                <div className=\"user\">\r\n                  <img src={userIcon} alt=\"User Icon\" />\r\n                </div>\r\n                <h2>Register</h2>\r\n                <Form onSubmit={handleSubmit(onSubmit)}>\r\n                  {\" \"}\r\n                  {/* Gọi onSubmit khi form được gửi */}\r\n                  <FormGroup>\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"Username\"\r\n                      {...register(\"username\", {\r\n                        required: \"* Username is required\",\r\n                      })} // Đăng ký trường với react-hook-form\r\n                    />\r\n                    {errors?.email && (\r\n                      <span className=\"text-danger\">\r\n                        {errors.email.message}\r\n                      </span>\r\n                    )}\r\n                    {/* Hiển thị thông báo lỗi */}\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <input\r\n                      type=\"email\"\r\n                      placeholder=\"Email\"\r\n                      {...register(\"email\", {\r\n                        required: \"* Email is required\",\r\n                        pattern: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                      })} // Đăng ký trường với react-hook-form\r\n                    />\r\n                    {errors?.email && (\r\n                      <span className=\"text-danger\">\r\n                        {errors.email.message}\r\n                      </span>\r\n                    )}\r\n                    {/* Hiển thị thông báo lỗi */}\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <input\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                      {...register(\"password\", {\r\n                        required: \"* Password is a required field\",\r\n                        pattern: /^(?=.*[a-z])(?=.*\\d)[a-z\\d]{8,}$/,\r\n                      })}\r\n                    />\r\n                    {errors?.password && (\r\n                      <span className=\"text-danger\">\r\n                        {errors.password.message}\r\n                      </span>\r\n                    )}\r\n                    {/* Hiển thị thông báo lỗi */}\r\n                  </FormGroup>\r\n                  <Button className=\"btn secondary__btn auth_btn\" type=\"submit\">\r\n                    Create Account\r\n                  </Button>\r\n                </Form>\r\n                <p>\r\n                  Already have an account? <Link to=\"/login\">Login</Link>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}